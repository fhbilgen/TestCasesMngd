<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
    </startup>
  <appSettings>
    <add key="NobelPhysicsLaureates" value="C:\code\_DemoSuite\Demo\files\NobelPhysicsLaureates.xml"/>
    <add key="TCPPort" value="11001"/>
  </appSettings>




  <system.serviceModel>

    
    <!-- ********** W C F   S E R V E R ********** -->
    
    <!--<diagnostics performanceCounters="All">
      <messageLogging logEntireMessage="true" logKnownPii="true" logMalformedMessages="true"
        logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
      <endToEndTracing propagateActivity="true" activityTracing="true"
        messageFlowTracing="true" />
    </diagnostics>-->
   
    <services>
      <service name="BuggerNetSvc.DemoService">
        <!--<host>          
          <baseAddresses>
            <add baseAddress="http://localhost:10001/BuggerNetSvc/" />
          </baseAddresses>
        </host>-->


        <endpoint address="http://localhost:10001/BuggerNetSvc/DemoService" binding="basicHttpBinding" bindingConfiguration="" contract="BuggerNetSvc.IDemoService"/>
        <!--<endpoint address="http://localhost:10001/BuggerNetSvc/DemoServiceWsHttp" binding="wsHttpBinding" bindingConfiguration="" contract="BuggerNetSvc.IDemoService"/>-->
        <endpoint address="http://localhost:10001/BuggerNetSvc/DemoService/mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>

      <service name="BuggerNetSvc.DemoServiceSesA">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:10002/BuggerNetSvc/"/>
          </baseAddresses>
        </host>
        <endpoint address="DemoServiceSesA" binding="basicHttpBinding" contract="BuggerNetSvc.IDemoSvcSesA" listenUriMode="Explicit">
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange">
        </endpoint>
        <endpoint address="net.tcp://localhost:10008/BuggerNetSvc/DemoServiceSesA" binding="netTcpBinding" bindingConfiguration="" contract="BuggerNetSvc.IDemoSvcSesA"/>
      </service>
      <service name="BuggerNetSvc.DemoServiceSesNA">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:10003/BuggerNetSvc/"/>
          </baseAddresses>
        </host>
        <endpoint address="DemoServiceSesNA" binding="basicHttpBinding" bindingConfiguration="" contract="BuggerNetSvc.IDemoSvcSesNA"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service name="BuggerNetSvc.DemoServiceSesReq">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:10004/DemoSvc/"/>
          </baseAddresses>
        </host>
        <endpoint address="DemoServiceSesReq" binding="basicHttpBinding" bindingConfiguration="" contract="BuggerNetSvc.IDemoSvcSesReq"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>


      <service name="BuggerNetSvc.DemoServiceSecure">
        <host>
          <baseAddresses>
            <add baseAddress="https://localhost:10005/BuggerNetSvc"/>
          </baseAddresses>
        </host>
        <endpoint address="DemoServiceSecure" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingConfig" contract="BuggerNetSvc.IDemoServiceSecure"/>

      </service>



    </services>

    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, 
          set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="True" httpGetUrl="http://localhost:10001/BuggerNetSvc/DemoServiceWSDL" httpsGetEnabled="False"/>
          <!-- To receive exception details in faults for debugging purposes, 
          set the value below to true.  Set to false before deployment 
          to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="False"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    
    
    <!--  **********  W C F   C L I E N T **********-->



    <client>
      <endpoint address="http://localhost:10002/BuggerNetSvc/DemoServiceSesA" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IDemoSvcSesA" contract="DemoServiceSesAClient.IDemoSvcSesA" name="BasicHttpBinding_IDemoSvcSesA"/>
      <endpoint address="net.tcp://localhost:10008/BuggerNetSvc/DemoServiceSesA" binding="netTcpBinding" bindingConfiguration="NetTcpBinding_IDemoSvcSesA" contract="DemoServiceSesAClient.IDemoSvcSesA" name="NetTcpBinding_IDemoSvcSesA">
        <identity>
          <userPrincipalName value="MIDDLEEAST\faikb"/>
        </identity>
      </endpoint>
      <endpoint address="http://localhost:10003/BuggerNetSvc/DemoServiceSesNA" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IDemoSvcSesNA" contract="DemoServiceSesNAClient.IDemoSvcSesNA" name="BasicHttpBinding_IDemoSvcSesNA"/>
      <endpoint address="https://localhost:10005/BuggerNetSvc/DemoServiceSecure" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IDemoServiceSecure" contract="DemoServiceSecureClient.IDemoServiceSecure" name="WSHttpBinding_IDemoServiceSecure"/>
      <endpoint address="http://localhost:10001/BuggerNetSvc/DemoService" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IDemoService" contract="DemoServiceClient.IDemoService" name="BasicHttpBinding_IDemoService"/>
    </client>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IDemoService"/>
        <binding name="BasicHttpBinding_IDemoSvcSesA"/>
        <binding name="BasicHttpBinding_IDemoSvcSesNA"/>
      </basicHttpBinding>
      <netTcpBinding>
        <binding name="NetTcpBinding_IDemoSvcSesA"/>
      </netTcpBinding>
      <wsHttpBinding>
        <binding name="wsHttpBindingConfig">
          <security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
        <binding name="WSHttpBinding_IDemoServiceSecure">
          <security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>    
    

  </system.serviceModel>


  <!--<system.diagnostics>
    <sources>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Verbose,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelTraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>

      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="ServiceModelTraceListener">
          </add>
        </listeners>
      </source>

      <source name="System.ServiceModel.Activation">
        <listeners>
          <add name="ServiceModelTraceListener">
          </add>
        </listeners>
      </source>


      -->
  <!--<source name="System.Net"  tracemode="includehex" maxdatasize="1024">-->
  <!--
      <source name="System.Net"  >
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Net.Cache">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Net.Http">
        <listeners>
          <add name="System.Net "/>
        </listeners>
      </source>
      <source name="System.Net.Sockets">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Net.WebSockets">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>


    </sources>

    <switches>
      <add name="System.Net" value="Verbose"/>
      <add name="System.Net.Cache" value="Verbose"/>
      <add name="System.Net.Http" value="Verbose"/>
      <add name="System.Net.Sockets" value="Verbose"/>
      <add name="System.Net.WebSockets" value="Verbose"/>
    </switches>
    
    
    <sharedListeners>
      <add initializeData="C:\work\Workshops\WfA\Logging\Service_tracelog.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelTraceListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
      -->
  <!--<add initializeData="C:\work\Workshops\WfA\Logging\Server_Net.log"
	     name="SystemNetListener" type="System.Diagnostics.TextWriterTraceListener"
	     traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>-->
  <!--
      <add name="System.Net" type="System.Diagnostics.TextWriterTraceListener" initializeData="C:\work\Workshops\WfA\Logging\Server_Net.log"  />
      -->
  <!--traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack" />-->
  <!--
    </sharedListeners>
    <trace autoflush="true"/>
  </system.diagnostics>-->




</configuration>
